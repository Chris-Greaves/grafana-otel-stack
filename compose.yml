name: grafana-otel-stack
services:
  grafana:
    image: grafana/grafana:10.2.2
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana
  tempo:
    image: grafana/tempo:2.3.1
    command:
      - -config.file=/etc/tempo.yaml
    restart: always
    volumes:
      - ./tempo/tempo.yml:/etc/tempo.yaml
      - ./data/tempo:/tmp/tempo
    ports:
      - 4317:4317 # otlp-grpc
      - 4318:4318 # otlp-http
      - 3200:3200 # tempo
    depends_on:
      azure-cli:
        condition: service_completed_successfully
      azurite:
        condition: service_started
      pencil:
        condition: service_completed_successfully
  loki:
    image: grafana/loki:2.9.2
    command: -config.file=/etc/loki/config.yaml -target=all # Running in Monolithic mode, see https://grafana.com/docs/loki/latest/get-started/deployment-modes/ if scaling is needed.
    ports:
      - 3100
      - 7946
      - 9095
    volumes:
      - ./loki/loki.yml:/etc/loki/config.yaml
    healthcheck:
      test:
        - CMD-SHELL
        - wget --no-verbose --tries=1 --spider http://localhost:3100/ready ||
          exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      azure-cli:
        condition: service_completed_successfully
      azurite:
        condition: service_started
      pencil:
        condition: service_completed_successfully
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus

  pencil:
    image: ghcr.io/chris-greaves/pencil:v0.0.2
    environment:
      - AZURE_ENDPOINT=http://azurite:10000/devstoreaccount1 # Azurite endpoint
      - AZURE_STORAGE_ACCOUNT=devstoreaccount1 # Default Azurite storage account
      - AZURE_STORAGE_KEY=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw== # Default azurite storage key
    command:
      - "/mnt/configs/"
      - "/mnt/create-containers.sh"
    volumes:
      - ./tempo/tempo.yml:/mnt/configs/tempo.yml
      - ./loki/loki.yml:/mnt/configs/loki.yml
      - ./create-containers.sh:/mnt/create-containers.sh

  # Local Azure Storage
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - 10000:10000

  # Creates the Azure storage container
  azure-cli:
    image: mcr.microsoft.com/azure-cli:2.9.1
    command:
      - sh
      - -c
      - /etc/create-containers.sh
    volumes:
      - ./create-containers.sh:/etc/create-containers.sh
    depends_on:
      azurite:
        condition: service_started
      pencil:
        condition: service_completed_successfully
volumes:
  grafana-data:
  prom_data:
  tempo_data:
networks: {}
